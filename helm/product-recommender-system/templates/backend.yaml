apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "product-recommender-system.fullname" . }}-backend
  labels:
    {{- include "product-recommender-system.labels" . | nindent 4 }}
    app.kubernetes.io/component: backend
spec:
  {{- if not .Values.autoscaling.enabled }}
  replicas: {{ .Values.replicaCount }}
  {{- end }}
  selector:
    matchLabels:
      {{- include "product-recommender-system.selectorLabels" . | nindent 6 }}
      app.kubernetes.io/component: backend
  template:
    metadata:
      {{- with .Values.podAnnotations }}
      annotations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      labels:
        {{- include "product-recommender-system.selectorLabels" . | nindent 8 }}
        app.kubernetes.io/component: backend
    spec:
      restartPolicy: {{ .Values.backend.restartPolicy | default "Always" }}
      backoffLimit: {{ .Values.backend.backoffLimit | default 12 }}
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      containers:
        - name: {{ .Chart.Name }}-backend
          image: "{{ .Values.backendImage }}"
          imagePullPolicy: {{ .Values.backend.pullPolicy }}
          ports:
            - name: http
              containerPort: {{ .Values.backend.service.targetPort }}
              protocol: TCP
          {{/*
          livenessProbe:
            httpGet:
              path: {{ .Values.backend.healthCheck.livenessProbe.path }}
              port: http
            initialDelaySeconds: {{ .Values.backend.healthCheck.livenessProbe.initialDelaySeconds }}
            periodSeconds: {{ .Values.backend.healthCheck.livenessProbe.periodSeconds }}
            timeoutSeconds: {{ .Values.backend.healthCheck.livenessProbe.timeoutSeconds }}
          readinessProbe:
            httpGet:
              path: {{ .Values.backend.healthCheck.readinessProbe.path }}
              port: http
            initialDelaySeconds: {{ .Values.backend.healthCheck.readinessProbe.initialDelaySeconds }}
            periodSeconds: {{ .Values.backend.healthCheck.readinessProbe.periodSeconds }}
            timeoutSeconds: {{ .Values.backend.healthCheck.readinessProbe.timeoutSeconds }}
            */}}
          env:
            {{- if .Values.env }}
            {{- toYaml .Values.env | nindent 12 }}
            {{- end }}
            {{- if .Values.backend.additionalEnv }}
            {{- toYaml .Values.backend.additionalEnv | nindent 12 }}
            {{- end }}
            {{- if .Values.minio.env }}
            {{- toYaml .Values.minio.env | nindent 12 }}
            {{- end }}
            {{- include "product-recommender-system.feastEnv" . | nindent 12 }}
          resources:
            {{- toYaml .Values.backend.resources | nindent 12 }}
          {{- if or .Values.backend.additionalVolumeMounts .Values.feast.secret }}
          volumeMounts:
            {{- with .Values.backend.additionalVolumeMounts }}
            {{- toYaml . | nindent 12 }}
            {{- end }}
            {{- if .Values.feast.secret }}
            - name: tls-secret
              mountPath: /app/feature_repo/secrets/tls.crt
              subPath: tls.crt
              readOnly: true
            {{- end }}
          {{- end }}
      {{- if or .Values.backend.additionalVolumes .Values.feast.secret }}
      volumes:
        {{- with .Values.backend.additionalVolumes }}
        {{- toYaml . | nindent 8 }}
        {{- end }}
        {{- if .Values.feast.secret }}
        - name: tls-secret
          secret:
            secretName: {{ .Values.feast.secret }}
            items:
            - key: tls.crt
              path: tls.crt
        {{- end }}
      {{- end }}
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}

---
apiVersion: v1
kind: Service
metadata:
  name: {{ include "product-recommender-system.fullname" . }}-backend
  labels:
    {{- include "product-recommender-system.labels" . | nindent 4 }}
    app.kubernetes.io/component: backend
spec:
  type: {{ .Values.backend.service.type }}
  ports:
    - port: {{ .Values.backend.service.port }}
      targetPort: http
      protocol: TCP
      name: http
  selector:
    {{- include "product-recommender-system.selectorLabels" . | nindent 4 }}
    app.kubernetes.io/component: backend

---
{{- if .Values.autoscaling.enabled }}
apiVersion: autoscaling/v2
kind: HorizontalPodAutoscaler
metadata:
  name: {{ include "product-recommender-system.fullname" . }}-backend
  labels:
    {{- include "product-recommender-system.labels" . | nindent 4 }}
spec:
  scaleTargetRef:
    apiVersion: apps/v1
    kind: Deployment
    name: {{ include "product-recommender-system.fullname" . }}-backend
  minReplicas: {{ .Values.autoscaling.minReplicas }}
  maxReplicas: {{ .Values.autoscaling.maxReplicas }}
  metrics:
    {{- if .Values.autoscaling.targetCPUUtilizationPercentage }}
    - type: Resource
      resource:
        name: cpu
        target:
          type: Utilization
          averageUtilization: {{ .Values.autoscaling.targetCPUUtilizationPercentage }}
    {{- end }}
    {{- if .Values.autoscaling.targetMemoryUtilizationPercentage }}
    - type: Resource
      resource:
        name: memory
        target:
          type: Utilization
          averageUtilization: {{ .Values.autoscaling.targetMemoryUtilizationPercentage }}
    {{- end }}
{{- end }}
